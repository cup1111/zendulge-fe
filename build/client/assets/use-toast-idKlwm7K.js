import{R as S}from"./chunk-NISHYRIK-qw7nT2B7.js";const p=1,A=1e5;let a=0;function f(){return a=(a+1)%Number.MAX_SAFE_INTEGER,a.toString()}const i=new Map,n=[];let r={toasts:[]},c;const d=t=>{if(i.has(t))return;const s=setTimeout(()=>{i.delete(t),c({type:"REMOVE_TOAST",toastId:t})},A);i.set(t,s)},O=(t,s)=>{switch(s.type){case"ADD_TOAST":return{...t,toasts:[s.toast,...t.toasts].slice(0,p)};case"UPDATE_TOAST":return{...t,toasts:t.toasts.map(e=>e.id===s.toast.id?{...e,...s.toast}:e)};case"DISMISS_TOAST":{const{toastId:e}=s;return e?d(e):t.toasts.forEach(o=>{d(o.id)}),{...t,toasts:t.toasts.map(o=>o.id===e||e===void 0?{...o,open:!1}:o)}}case"REMOVE_TOAST":return s.toastId===void 0?{...t,toasts:[]}:{...t,toasts:t.toasts.filter(e=>e.id!==s.toastId)};default:return t}};c=t=>{r=O(r,t),n.forEach(s=>{s(r)})};const u=c;function E({...t}){const s=f(),e=T=>u({type:"UPDATE_TOAST",toast:{...T,id:s}}),o=()=>u({type:"DISMISS_TOAST",toastId:s});return u({type:"ADD_TOAST",toast:{...t,id:s,open:!0,onOpenChange:T=>{T||o()}}}),{id:s,dismiss:o,update:e}}function m(){const[t,s]=S.useState(r);return S.useEffect(()=>(n.push(s),()=>{const e=n.indexOf(s);e>-1&&n.splice(e,1)}),[t]),{...t,toast:E,dismiss:e=>u({type:"DISMISS_TOAST",toastId:e})}}export{m as u};
